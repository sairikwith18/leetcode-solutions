class Solution {
public:
    int bs(vector<int>& nums,int n,int target){
        int low=0,high=n-1;
        //int ans=0;
        while(low<=high){
            int mid=low+(high-low)/2;
            if(nums[mid]==target) return mid;
            else if(nums[mid] > target) {
                //ans = mid;
                high=mid-1;
            }
            else {
                //ans=mid;
                low=mid+1;
            }
        }
        //return ans+1;
        return low;
    }
    int searchInsert(vector<int>& nums, int target) {
        int n = nums.size();
        if(target > nums[n-1]) return n;
        if(target < nums[0]) return 0;
        return bs(nums,n,target);
    }
};
